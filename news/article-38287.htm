<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashnode.github.io/news/article-38287.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>面试之Java String 编码相关</title>
    <link rel="icon" href="/assets/website/img/clashnode/favicon.ico" type="image/x-icon"/>
        <meta name="description" content="另有一篇我的字符编码本质入门的文章见这里：https://www.cnblogs.com/uncleguo/p/16008551.html 　　实话说，作为一个多年Java老年程序员，直到近来，在没有" />
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/clashnode/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-8B9V1K3BBT"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-8B9V1K3BBT');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> Clash Node
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">面试之Java String 编码相关</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/news/">新闻资讯</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                                <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<p><span style="color: rgba(51, 102, 255, 1)">另有一篇我的字符编码本质入门的文章见这里：</span><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/uncleguo/p/16008551.html"  target="_blank" rel="nofollow">https://www.cnblogs.com/uncleguo/p/16008551.html</a></p> <p>　　实话说，作为一个多年Java老年程序员，直到近来，在没有决心花时间搞清楚Java String的编码相关问题之前， 自己也都还是似懂非懂，一脸懵逼的。设想如果在面试中，有同学能够条理清晰的回答下面的问题，那必是非常了得之人，论<strong>智慧武功应该均在本人之上:-)。</strong></p> <p><strong>　　问：请预测下面程序的输出，并解释原因。printHexBinary方法为16进制打印Byte</strong></p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 128, 128, 1)"> 1</span> String str = "中"<span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 128, 128, 1)"> 2</span><span style="color: rgba(0, 128, 128, 1)"> 3</span><span style="color: rgba(0, 0, 255, 1)">byte</span>[] bufferGBK =  str.getBytes(<span style="color: rgba(0, 128, 0, 1)">"GBK"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)"> 4</span> System.out.<strong>println</strong>(<span style="color: rgba(0, 128, 0, 1)">"bufferGBK = "</span>+<span style="color: rgba(0, 0, 0, 1)">printHexBinary(bufferGBK)) ;</span><span style="color: rgba(0, 128, 128, 1)"> 5</span><span style="color: rgba(0, 128, 128, 1)"> 6</span> String gbkString =<span style="color: rgba(0, 0, 255, 1)">new</span> String(bufferGBK,<span style="color: rgba(0, 128, 0, 1)">"GBK"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)"> 7</span> System.out.<strong>println</strong>(<span style="color: rgba(0, 128, 0, 1)">"gbkString = new String bufferGBK GBK : "</span>+<span style="color: rgba(0, 0, 0, 1)">gbkString);</span><span style="color: rgba(0, 128, 128, 1)"> 8</span><span style="color: rgba(0, 128, 128, 1)"> 9</span> String utf8String =<span style="color: rgba(0, 0, 255, 1)">new</span> String(bufferGBK,<span style="color: rgba(0, 128, 0, 1)">"utf-8"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)">10</span> System.out.<strong>println</strong>(<span style="color: rgba(0, 128, 0, 1)">"utf8String = new String bufferGBK utf8 : "</span>+<span style="color: rgba(0, 0, 0, 1)">utf8String);</span><span style="color: rgba(0, 128, 128, 1)">11</span><span style="color: rgba(0, 128, 128, 1)">12</span><span style="color: rgba(0, 0, 255, 1)">byte</span>[] utfFromStr = utf8String.getBytes(<span style="color: rgba(0, 128, 0, 1)">"utf-8"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)">13</span> System.out.<strong>println</strong>(<span style="color: rgba(0, 128, 0, 1)">"utf8String getBytes utf-8 : "</span>+<span style="color: rgba(0, 0, 0, 1)">printHexBinary(utfFromStr));</span><span style="color: rgba(0, 128, 128, 1)">14</span><span style="color: rgba(0, 128, 128, 1)">15</span><span style="color: rgba(0, 0, 255, 1)">byte</span>[] gbkFromStr = utf8String.getBytes(<span style="color: rgba(0, 128, 0, 1)">"GBK"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)">16</span> System.out.<strong>println</strong>(<span style="color: rgba(0, 128, 0, 1)">"utf8String getBytes GBK : "</span>+<span style="color: rgba(0, 0, 0, 1)">printHexBinary(gbkFromStr));</span><span style="color: rgba(0, 128, 128, 1)">17</span><span style="color: rgba(0, 128, 128, 1)">18</span><span style="color: rgba(0, 0, 255, 1)">byte</span>[] isoFromStr = utf8String.getBytes(<span style="color: rgba(0, 128, 0, 1)">"ISO-8859-1"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)">19</span> System.out.<strong>println</strong>(<span style="color: rgba(0, 128, 0, 1)">"utf8String getBytes ISO-8859-1 : "</span>+<span style="color: rgba(0, 0, 0, 1)">printHexBinary(isoFromStr));</span><span style="color: rgba(0, 128, 128, 1)">20</span><span style="color: rgba(0, 128, 128, 1)">21</span> String isoString =<span style="color: rgba(0, 0, 255, 1)">new</span> String(bufferGBK,<span style="color: rgba(0, 128, 0, 1)">"ISO-8859-1"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)">22</span> System.out.<strong>println</strong>(<span style="color: rgba(0, 128, 0, 1)">"isoString = new String bufferGBK ISO-8859-1 : "</span>+<span style="color: rgba(0, 0, 0, 1)">isoString);</span><span style="color: rgba(0, 128, 128, 1)">23</span><span style="color: rgba(0, 128, 128, 1)">24</span> utfFromStr = isoString.getBytes(<span style="color: rgba(0, 128, 0, 1)">"utf-8"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)">25</span> System.out.<strong>println</strong>(<span style="color: rgba(0, 128, 0, 1)">"isoString getBytes utf-8 : "</span>+<span style="color: rgba(0, 0, 0, 1)">printHexBinary(utfFromStr));</span><span style="color: rgba(0, 128, 128, 1)">26</span><span style="color: rgba(0, 128, 128, 1)">27</span> gbkFromStr = isoString.getBytes(<span style="color: rgba(0, 128, 0, 1)">"GBK"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)">28</span> System.out.<strong>println</strong>(<span style="color: rgba(0, 128, 0, 1)">"isoString getBytes GBK : "</span>+<span style="color: rgba(0, 0, 0, 1)">printHexBinary(gbkFromStr));</span><span style="color: rgba(0, 128, 128, 1)">29</span><span style="color: rgba(0, 128, 128, 1)">30</span> isoFromStr = isoString.getBytes(<span style="color: rgba(0, 128, 0, 1)">"ISO-8859-1"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)">31</span> System.out.<strong>println</strong>(<span style="color: rgba(0, 128, 0, 1)">"isoString getBytes ISO-8859-1 : "</span>+printHexBinary(isoFromStr));</pre> </div> <p>　　按我之前的认识，先简单推理下。</p> <p>　　第4行的Print输出的应该是“中”的GBK编码（中的GBK编码是0xD6 0xD0）。</p> <p>　　第7行用[0xD6 0xD0]以GBK字符集new一个String，打印这个String，那应该是“中”</p> <p>　　第10行用[0xD6 0xD0]以UTF8字符集new一个String，打印这个String，这里可能会乱码，具体会显示什么字符，要看0xD6 0xD0对应的Utf8 字符。</p> <p><span style="color: rgba(255, 0, 0, 1)"><strong>×</strong></span> 第13行从上面new的String中按UTF8取得Byte数组，因为上面New 的是Utf8 String，这里取出的应该还是[0xD6 0xD0]</p> <p><strong><span style="color: rgba(255, 0, 0, 1)">×</span></strong>第16行从上面new的String中按GBK取得Byte数组， 这……不太确定，可能还是[0xD6 0xD0]？内存存储的编码应该是不变的？</p> <p><strong><span style="color: rgba(255, 0, 0, 1)">×</span></strong>第19行从上面new的String中按ISO8859取得Byte数组， 这……同上吧？ 但似乎有点儿问题，应该是不对，逻辑上如果getBytes都一样，那为啥要参数指定字符集呢？</p> <p>　　第22行用[0xD6 0xD0]以ISO8859字符集new一个String，打印这个String，这里可能会乱码， 要看[0xD6 0xD0]ISO8859中对应的字符。</p> <p><strong><span style="color: rgba(255, 0, 0, 1)">×</span></strong>第25，28行，这……</p> <p>　　第30行从上面new的String中按ISO8859取得Byte数组，这应该不会变，还是[0xD6 0xD0]</p> <p><strong>我只能回答成这样了，自我感觉比较风流倜傥，潇洒惆怅的可以先自己琢磨下， 实际的程序输出在这里↓</strong></p> <div class="cnblogs_code"><img decoding="async" src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt="面试之Java String 编码相关" id="code_img_closed_6e434d2c-8179-4b09-a0f9-0db368d8dd9b" class="code_img_closed"/><img decoding="async" src="https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt="面试之Java String 编码相关" id="code_img_opened_6e434d2c-8179-4b09-a0f9-0db368d8dd9b" class="code_img_opened" style="display: none"/></p> <div id="cnblogs_code_open_6e434d2c-8179-4b09-a0f9-0db368d8dd9b" class="cnblogs_code_hide"> <pre><span style="color: rgba(0, 128, 128, 1)"> 1</span> ========================================<span style="color: rgba(0, 128, 128, 1)"> 2</span> bufferGBK = 0xD6,0xD0<span style="color: rgba(0, 128, 128, 1)"> 3</span> gbkString =<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> String bufferGBK GBK : 中</span><span style="color: rgba(0, 128, 128, 1)"> 4</span> utf8String =<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> String bufferGBK utf8 : ��</span><span style="color: rgba(0, 128, 128, 1)"> 5</span> utf8String getBytes utf-8 : 0xEF,0xBF,0xBD,0xEF,0xBF,0xBD<span style="color: rgba(0, 128, 128, 1)"> 6</span> utf8String getBytes GBK : 0x3F,0x3F<span style="color: rgba(0, 128, 128, 1)"> 7</span> utf8String getBytes ISO-8859-1 : 0x3F,0x3F<span style="color: rgba(0, 128, 128, 1)"> 8</span> isoString =<span style="color: rgba(0, 0, 255, 1)">new</span> String bufferGBK ISO-8859-1<span style="color: rgba(0, 0, 0, 1)"> : ÖÐ</span><span style="color: rgba(0, 128, 128, 1)"> 9</span> isoString getBytes utf-8 : 0xC3,0x96,0xC3,0x90<span style="color: rgba(0, 128, 128, 1)">10</span> isoString getBytes GBK : 0x3F,0x3F<span style="color: rgba(0, 128, 128, 1)">11</span> isoString getBytes ISO-8859-1 : 0xD6,0xD0<span style="color: rgba(0, 128, 128, 1)">12</span> ========================================</pre> </div> <p><span class="cnblogs_code_collapse">答案点这里</span></div> <p>&nbsp;　　然后对着输出结果来理解下。</p> <p><strong>答案中</strong>的2，3行输出跟预期一样</p> <p><span style="color: rgba(128, 0, 0, 1)">　　第4行确实是“乱码”了，但为什么[0xD6 0xD0]会变成两个一样的字符��<br /></span></p> <p><span style="color: rgba(128, 0, 0, 1)">　　第5行，byte数组不是之前的2个，而是6个元素，与0xD6 0xD0完全不同，是何原因？</span></p> <p><span style="color: rgba(128, 0, 0, 1)">　　第6，7行，byte数组是[0x3F 0x3F]，为啥？</span></p> <p><span style="color: rgba(128, 0, 0, 1)">　　第8行，也是“乱码”了，ÖÐ, 但为什么又变成了两个不同的字符。。-_-||</span></p> <p><span style="color: rgba(128, 0, 0, 1)">　　第9行 byte数组4个元素，看起来不同。</span></p> <p><span style="color: rgba(128, 0, 0, 1)">　　第10行 byte数组[0x3f 0x3f]</span></p> <p><span style="color: rgba(128, 0, 0, 1)"><span style="color: rgba(0, 0, 0, 1)">第11行 确实还是[0xD6 0xD0]</span></span></p> <p><span style="color: rgba(128, 0, 0, 1)"><span style="color: rgba(0, 0, 0, 1)"><strong>实践检验真理，上面的实验表明，String在内存存储的实际内容与getBytes取得的内容，可能是存在转换关系的。某些字符集的情况下是不变的（ISO8859），而有些经过Byte 到 String 到 Byte 的转换后会发生变化，与创建时的byte数组不同。</strong></span></span></p> <p><span style="color: rgba(0, 0, 0, 1)">　　经过一番上下求索之后。下面是我认为比较合理的解释。</span></p> <p><span style="color: rgba(0, 0, 128, 1)">　　答案中的2，3行输出跟预期一样</span></p> <p><span style="color: rgba(0, 0, 128, 1)">　　第4行，乱码因为[0xD6 0xD0]不是两个有效的Utf8字符集字符， Java将其转换处理为两个�，即utf8String中的内容即为“��”</span></p> <p><span style="color: rgba(0, 0, 128, 1)">　　第5行此时取得Byte数组为对应Utf8 中两个�字符的字符编码，即在UTF8 字符集中� 的编码为[0xEF,0xBF,0xBD]</span></p> <p><span style="color: rgba(0, 0, 128, 1)">　　第6行取得的Byte数组为，字符�对应在GBK字符集中的字符编码，该字符应该未包含，被转换为 0x3F 即 ? 字符</span></p> <p><span style="color: rgba(0, 0, 128, 1)">　　第7行，同上</span></p> <p><span style="color: rgba(0, 0, 128, 1)">　　第8行，并不是乱码，Ö 和 Ð 确实是ISO8859字符集中包含的字符，对应的编码为[0xD6 0xD0]，在GBK中为字符 “中” ，在 ISO8859中为两个字符 “Ö” 和 “Ð”，isoString内容为“ÖÐ”</span></p> <p><span style="color: rgba(0, 0, 128, 1)">　　第9行，取得isoString在utf8 编码集中对应 Ö 和 Ð 字符的编码数组， 即 [0xC3,0x96] =Ö&nbsp; [0xC3,0x90] = Ð。</span></p> <p><span style="color: rgba(0, 0, 128, 1)">　　第10行，取得isoString在GBK编码其中对应的Ö 和 Ð 字符的编码数组，因为GBK未包含这两个字符，于是被转换为“？？”后取得编码 即 [0x3F 0x3F]</span></p> <p><span style="color: rgba(0, 0, 128, 1)">　　第10行，取得isoString在ISO8859中对应的Ö 和 Ð 字符的编码数组，即为[0xD6 0xD0]，因此不变。</span></p> <p><strong>总结及推论：</strong></p> <ul> <li>　　String实际存储的内容是不可见，也无需关心的，<strong>可以理解为它存储的是字符</strong>。你用Byte数组初始化一个字符串时，总会显示或者默认的指明数组的编码格式。String内部会据此将其对应的<strong>字符而非编码，以某种方法</strong>保存在其内部。如果你指定的字符集与提供的数组不一致，String会帮你映射为未知字符可能是“？”或“�”。</li> <li>　　String存储的不是初始化时提供的Byte数组，因此经过 Byte 到 String的转换后，可能会导致原始Byte数组的内容丢失，无法通过转换后的 String获得。所以乱码问题，要从源头解决，而不是在String上下功夫。</li> <li>　　ISO8859-1是一个0x00-0xFF的都有定义的单字符编码，因此该编码进行byte到String转换不会丢失信息，String可以以Iso8859取得Byte数组后，以其他字符集显示，因此很多地方仍然使用此种字符集。</li> </ul> <p><strong>另：</strong><strong>字符是抽象的，具体存储肯定要定义编码，Java规范定义的是“外部”的编码的表现和工作方式，内部存储可以自行实现，目前实际使用似乎是UTF16.</strong></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-37798.htm">同城免费领养宠物怎么领取 同城免费领养宠物怎么领取的</a></p>
                                        <p>下一个：<a href="/news/article-38288.htm">人和宠物打的狂犬疫苗一样吗 人和宠物打的狂犬疫苗一样吗多少钱</a></p>
                                    </div>
                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2024-12-26-free-ssr-subscribe.htm">12月26日更新20.9M/S，2024年最新高速SSR/V2ray/Clash/Shadowrocket订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了美国、加拿大、韩国、欧洲、日本、新加坡、香港等地区,最高速度可达20.9 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2024-11-7-free-clash-subscribe.htm">11月7日更新19.1M/S，2024年最新高速V2ray/SSR/Clash/Shadowrocket订阅链接免费节点订阅</a></h4>
                <p>这一次的节点更新覆盖了美国、日本、新加坡、加拿大、欧洲、韩国、香港等地区,最高速度可达19.1 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2024-10-28-free-v2ray-subscribe.htm">10月28日更新18.6M/S，2024年最新高速Shadowrocket/SSR/Clash/V2ray订阅链接免费节点订阅</a></h4>
                <p>这一次的节点更新覆盖了新加坡、加拿大、香港、日本、美国、韩国、欧洲等地区,最高速度可达18.6 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-36819.htm">vue3 vue-router的使用</a></h4>
                <p>前端路由是如何做到URL和内容进行映射呢？监听URL的改变 目录 前端路由原理 vue-router的使用 &nbsp;默认路由，重定向 hash与history模式 router-link 路由懒加</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2024-10-11-free-subscribe-node.htm">10月11日更新21.6M/S，2024年最新高速V2ray/SSR/Shadowrocket/Clash订阅链接免费节点订阅</a></h4>
                <p>这一次的节点更新覆盖了香港、加拿大、美国、日本、新加坡、欧洲、韩国等地区,最高速度可达21.6 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2024-10-25-shadowrocket-node.htm">10月25日更新18.5M/S，2024年最新高速V2ray/SSR/Shadowrocket/Clash订阅链接免费节点订阅</a></h4>
                <p>这一次的节点更新覆盖了美国、加拿大、新加坡、韩国、香港、欧洲、日本等地区,最高速度可达18.5 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2025-1-9-clash-node.htm">1月9日更新18.7M/S，2025年最新高速Clash/SSR/Shadowrocket/V2ray订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了韩国、日本、加拿大、美国、香港、欧洲、新加坡等地区,最高速度可达18.7 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-24464.htm">VUE3 之 全局 Mixin 与 自定义属性合并策略 &#8211; 这个系列的教程通俗易懂，适合新手</a></h4>
                <p>1. 概述 老话说的好：心态决定命运，好心态才能有好的命运。 言归正传，今天我们来聊聊 VUE 中的全局 Mixin 与 自定义属性合并策略。 2. Mixin 的使用 2.1 全局 Mixin &n</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2024-12-6-free-node-subscribe-links.htm">12月6日更新19.7M/S，2024年最新高速V2ray/Shadowrocket/SSR/Clash订阅链接免费节点订阅</a></h4>
                <p>这一次的节点更新覆盖了美国、日本、新加坡、欧洲、加拿大、韩国、香港等地区,最高速度可达19.7 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-37308.htm">动物医院好评模版（宠物医院的好评怎么写）</a></h4>
                <p>摘要：       今天给各位分享动物医院好评模版的知识，其中也会对宠物医院的好评怎么写进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、宠物医院好评怎么写...</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">33</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
                                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
                                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
                                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <p class="m-0">Clash Node官网订阅站 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->
    <!-- all js scripts and files here -->
    <script src="/assets/website/js/frontend/clashnode/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/clashnode/jquery-3.5.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/website/js/frontend/clashnode/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/website/js/frontend/clashnode/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/website/js/frontend/clashnode/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/clashnode/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/website/js/frontend/clashnode/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>