<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashnode.github.io/news/article-98956.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>SpringBoot如何整合spring-retry来实现接口请求重试</title>
    <link rel="icon" href="/assets/website/img/clashnode/favicon.ico" type="image/x-icon"/>
        <meta name="description" content="一、重试机制 由于网络不稳定或网络抖动经常会造成接口请求失败的情况，当我们再去尝试就成功了，这就是重试机制。 本文首发于Java潘老师个人博客：SpringBoot整合spring-retry组件实现" />
    
    <meta name="author" content="Clash Node官网订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashnode.github.io/news/article-98956.htm" />
    <meta property="og:site_name" content="Clash Node官网订阅站" />
    <meta property="og:title" content="SpringBoot如何整合spring-retry来实现接口请求重试" />
    <meta property="og:image" content="https://clashnode.github.io/uploads/20240214/7caaec5e02bb1ce363bb9268b81306bf.webp" />
        <meta property="og:release_date" content="2025-04-19T08:55:45" />
    <meta property="og:updated_time" content="2025-04-19T08:55:45" />
        <meta property="og:description" content="一、重试机制 由于网络不稳定或网络抖动经常会造成接口请求失败的情况，当我们再去尝试就成功了，这就是重试机制。 本文首发于Java潘老师个人博客：SpringBoot整合spring-retry组件实现" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="SpringBoot如何整合spring-retry来实现接口请求重试">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/clashnode/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-8B9V1K3BBT"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-8B9V1K3BBT');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> Clash Node                </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">SpringBoot如何整合spring-retry来实现接口请求重试</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/news/">新闻资讯</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                                <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <h2>一、重试机制</h2> <p>由于网络不稳定或网络抖动经常会造成接口请求失败的情况，当我们再去尝试就成功了，这就是重试机制。</p> <p><strong><span style="color:#fe2c24;">本文首发于Java潘老师个人博客</span></strong>：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.panziye.com/java/3293.html"  rel="nofollow">SpringBoot整合spring-retry组件实现重试机制</a></p> <p>其主要目的就是要尽可能地提高请求成功的概率，但一般情况下，我们请求第一次失败，代码运行就抛出异常结束了，如果想再次请求可能还需要手工操作，这非常地不方便，可行性也不佳。因此，Spring框架提供了对重试机制支持，并且在Spring Cloud中可以与Hystrix结合使用，可以避免访问到已经不正常的实例。</p> <h2>二、重试机制要素</h2> <p>重试机制要素如下：</p> <ul> <li>限制重试次数</li> <li>每次重试的时间间隔</li> <li>最终失败结果的报警或事物回滚</li> <li>在特定失败异常事件情况下选择重试</li> </ul> <h2>三、重试机制注意事项</h2> <p>对于非幂等性的方法我们要慎用重试机制，可能会造成意料之外的后果。<br /><em>所谓幂等性：</em>就是用户对于同一操作发起的一次请求或者多次请求的结果是一致的，不会因为多次点击而产生了副作用。</p> <h2>四、SpringBoot整合spring-retry</h2> <p>下面我们就来看下，我们应该如何使用SpringBoot来整合spring-retry组件实现重试机制。</p> <h3>1）添加依赖</h3> <p>首先我们在SpringBoot项目中的<code>pom.xml</code>添加相关依赖，如下：</p> <pre><code>&lt;!-- 重试相关依赖包 --&gt; &lt;dependency&gt;     &lt;groupId&gt;org.springframework.retry&lt;/groupId&gt;     &lt;artifactId&gt;spring-retry&lt;/artifactId&gt;     &lt;version&gt;1.2.4.RELEASE&lt;/version&gt; &lt;/dependency&gt;   &lt;dependency&gt;     &lt;groupId&gt;org.aspectj&lt;/groupId&gt;     &lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;     &lt;version&gt;1.9.4&lt;/version&gt; &lt;/dependency&gt;</code></pre> <h3>2）添加@EnableRetry注解</h3> <p>在主启动类Application上添加@EnableRetry注解，实现对重试机制的支持</p> <pre><code>@SpringBootApplication @EnableRetry public class RetryApplication {       public static void main(String[] args) {           SpringApplication.run(RetryApplication.class, args);     }   }</code></pre> <p>注意：@EnableRetry也可以使用在配置类、ServiceImpl类、方法上</p> <h3>3）添加@Retryable注解</h3> <p>我们针对需要实现重试的方法上添加<code>@Retryable</code>注解，使该方法可以实现重试，这里我列出ServiceImpl中的一个方法：</p> <pre><code>@Service public class RetryServiceImpl implements RetryService {       @Retryable(value = Exception.class, maxAttempts = 3, backoff = @Backoff(delay = 2000,multiplier = 1.5))     public String testRetry() throws Exception {           System.out.println("开始执行代码："+ LocalTime.now());         int code = 0;         // 模拟一直失败         if(code == 0){            // 这里可以使自定义异常，@Retryable中value需与其一致             throw new Exception("代码执行异常");         }         System.out.println("代码执行成功");         return "success";     } }</code></pre> <p>说明：@Retryable配置元数据情况：<br /> value ：针对指定抛出的异常类型，进行重试，这里指定的是Exception<br /> maxAttempts ：配置最大重试次数，这里配置为3次（包含第一次和最后一次）<br /> delay： 第一次重试延迟间隔，这里配置的是2s<br /> multiplier ：每次重试时间间隔是前一次几倍，这里是1.5倍</p> <h3>4）Controller测试代码</h3> <pre><code>@RestController @RequestMapping("/test") public class TestController {     @Autowired     private RetryService retryService;       @GetMapping("/retry")     public String testRetry() throws Exception {         return retryService.testRetry();     } }</code></pre> <h3>5）发送请求</h3> <p>发送请求后，我们发现后台打印情况，确实重试了3次，并且在最后一次重试失败的情况下，才抛出异常，具体如下（可以注意下时间间隔）：</p> <p style="text-align:center;"><a href="https://www.panziye.com/wp-content/uploads/2021/06/2021062306235916.png" rel="nofollow" class="fancybox" data-fancybox-group="button"><img decoding="async" alt="SpringBoot整合spring-retry组件实现重试机制" src="http://img.555519.xyz/uploads3/20220821/3d3f90f3b5d8c750a4d8e7df74794a12.jpg"></a></p> <h3>6）补充：@Recover</h3> <p>一般情况下，我们重试最大设置的次数后，仍然失败抛出异常，我们会通过全局异常处理类进行统一处理，但是我们其实也可以自行处理，可以通过<code>@Recover</code>注解来实现，具体如下：</p> <pre><code>@Service public class RetryServiceImpl implements RetryService {       @Retryable(value = Exception.class, maxAttempts = 3, backoff = @Backoff(delay = 2000,multiplier = 1.5))     public String testRetry() throws Exception {           System.out.println("开始执行代码："+ LocalTime.now());         int code = 0;         if(code == 0){             // 这里可以使自定义异常，@Retryable中value需与其一致             throw new Exception("代码执行异常");         }         System.out.println("代码执行成功");         return "success";     }       /**      * 最终重试失败处理      * @param e      * @return      */     @Recover     public String recover(Exception e){           System.out.println("代码执行重试后依旧失败");         return "fail";     } }</code></pre> <p>注意：<br /> 1）@Recover的方法中的参数异常类型需要与重试方法中一致<br /> 2）该方法的返回值类型与重试方法保持一致<br /> 再次测试如下（发现不会再抛出异常）：</p> <p style="text-align:center;"><a href="https://www.panziye.com/wp-content/uploads/2021/06/2021062306310489.png" rel="nofollow" class="fancybox" data-fancybox-group="button"><img decoding="async" alt="SpringBoot整合spring-retry组件实现重试机制" src="http://img.555519.xyz/uploads3/20220821/2702a242d8e572c407d648d6925b8313.jpg"></a></p> <p><strong><span style="color:#fe2c24;">本文首发于Java潘老师个人博客</span></strong>：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.panziye.com/java/3293.html"  rel="nofollow">SpringBoot整合spring-retry组件实现重试机制</a></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-98955.htm">pytorch 自动构建任意层的深度神经网络(DNN)</a></p>
                                        <p>下一个：<a href="/news/article-99745.htm">虚拟机搭建负载均衡，mysql主从复制和读写分离（四、搭建主从复制和读写分离）</a></p>
                                    </div>
                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2025-3-31-node-share-links.htm">3月31日更新20.1M/S，2025年最新高速Shadowrocket/Clash/SSR/V2ray订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了美国、欧洲、新加坡、日本、韩国、香港、加拿大等地区,最高速度可达20.1 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2025-4-17-node-share-links.htm">4月17日更新22.8M/S，2025年最新高速Clash/V2ray/SSR/Shadowrocket订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了香港、韩国、美国、新加坡、日本、加拿大、欧洲等地区,最高速度可达22.8 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-97507.htm">动物医院名字大全集图片（动物医院牌匾）</a></h4>
                <p>摘要：       本篇文章给大家谈谈动物医院名字大全集图片，以及动物医院牌匾对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、请帮忙起个宠物医院的名字...        本篇</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-93048.htm">宠物品牌起名字大全（宠物品牌介绍）</a></h4>
                <p>摘要：       今天给各位分享宠物品牌起名字大全的知识，其中也会对宠物品牌介绍进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、宠物店取什么名字好...   </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2025-3-24-free-node-subscribe.htm">3月24日更新21M/S，2025年最新高速V2ray/SSR/Clash/Shadowrocket订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了新加坡、香港、日本、欧洲、加拿大、韩国、美国等地区,最高速度可达21 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2025-3-8-node-share.htm">3月8日更新20M/S，2025年最新高速V2ray/SSR/Shadowrocket/Clash订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了加拿大、香港、美国、新加坡、韩国、日本、欧洲等地区,最高速度可达20 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-75287.htm">北京宠物医院前十名一朝阳区宠爱医院（北京朝阳区宠物医院哪个好）</a></h4>
                <p>摘要：       今天给各位分享北京宠物医院前十名一朝阳区宠爱医院的知识，其中也会对北京朝阳区宠物医院哪个好进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2025-4-12-node-share-links.htm">4月12日更新18.1M/S，2025年最新高速Shadowrocket/SSR/V2ray/Clash订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了日本、欧洲、韩国、香港、美国、新加坡、加拿大等地区,最高速度可达18.1 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-86457.htm">动物防疫计划书怎么写（动物防疫计划的编制）</a></h4>
                <p>摘要：       本篇文章给大家谈谈动物防疫计划书怎么写，以及动物防疫计划的编制对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、动物防疫工作个人总结报告...        </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2025-3-22-free-clash.htm">3月22日更新20.6M/S，2025年最新高速V2ray/SSR/Shadowrocket/Clash订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了新加坡、香港、美国、欧洲、加拿大、日本、韩国等地区,最高速度可达20.6 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">54</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
                                <h4><span class="badge" style="float: right;">85</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                                            <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                        <p class="m-0">Clash Node官网订阅站 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->
    <!-- all js scripts and files here -->
    <script src="/assets/website/js/frontend/clashnode/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/clashnode/jquery-3.5.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/website/js/frontend/clashnode/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/website/js/frontend/clashnode/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/website/js/frontend/clashnode/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/clashnode/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/website/js/frontend/clashnode/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>