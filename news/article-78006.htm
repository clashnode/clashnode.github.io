<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashnode.github.io/news/article-78006.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>C#自定义配置文件方法详解_在线工具</title>
    <link rel="icon" href="/assets/website/img/clashnode/favicon.ico" type="image/x-icon"/>
        <meta name="description" content=".NET程序中，经常使用Config文件来配置应用程序中经常使用的值，比如数据库连接字符串。最近项目遇到一个需要配置好多节点在配置文件中的需求。为了使配置节点整洁易维护，在代码调用时也保证获取时比较直" />
    
    <meta name="author" content="Clash Node官网订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashnode.github.io/news/article-78006.htm" />
    <meta property="og:site_name" content="Clash Node官网订阅站" />
    <meta property="og:title" content="C#自定义配置文件方法详解_在线工具" />
    <meta property="og:image" content="https://clashnode.github.io/uploads/20240214/5764f68424815c2ef26e500bb67a21d1.webp" />
        <meta property="og:release_date" content="2025-03-21T10:27:43" />
    <meta property="og:updated_time" content="2025-03-21T10:27:43" />
        <meta property="og:description" content=".NET程序中，经常使用Config文件来配置应用程序中经常使用的值，比如数据库连接字符串。最近项目遇到一个需要配置好多节点在配置文件中的需求。为了使配置节点整洁易维护，在代码调用时也保证获取时比较直" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="C#自定义配置文件方法详解_在线工具">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/clashnode/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-8B9V1K3BBT"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-8B9V1K3BBT');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> Clash Node                </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">C#自定义配置文件方法详解_在线工具</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/news/">新闻资讯</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                                <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				</h1> <blockquote> <p>.NET程序中，经常使用Config文件来配置应用程序中经常使用的值，比如数据库连接字符串。最近项目遇到一个需要配置好多节点在配置文件中的需求。为了使配置节点整洁易维护，在代码调用时也保证获取时比较直观，结合自定义配置文件专门整理了一个配置文件帮助类Demo。此篇文章主要讲述自定义配置文件的使用方法。</p> </blockquote> <hr/> <h3 id="常见配置文件使用方法">常见配置文件使用方法</h3> <ul> <li>直接在connectionStrings\appSettings这两个节点中添加add节点配置 <ul> <li>这种方式在项目中很常见，使用简单，这里不做介绍</li> </ul> </li> <li>文件操作 <ul> <li>很多程序中（自己公司老项目），通过获取指定路径下XML\ini\json\txt等文件，通过IO获取文件内容并对文件进行解析，从而获取程序需要的配置信息（不推荐）</li> </ul> </li> </ul> <h3 id="自定义配置文件">自定义配置文件</h3> <p>在App.Config(web.config)中指定其他配置文件的路径和节点。<br /> 在configSections节点下配置section节点，.NET提供自带的类型进行封装。（NameValue键值对、Dictionary字典、SingTag基础结构）。Section节点的name属性是自定义节点的名称，type是接收信息的数据类型。<br /><strong>注意！configSections节点必须为configuration下第一个节点</strong></p> <blockquote> <p><kbd>configSections</kbd>的<kbd>name</kbd>属性为自定义配置节点的名称，<kbd>type<kbd> 为转换的类型</kbd></kbd></p> <p><code>ConfigurationManager.GetSection("name")</code> 方法的参数是自定义配置文件节点的名称</p> </blockquote> <h4 id="namevalue键值对">NameValue键值对</h4> <p>配置语法格式：</p> <pre><code class="language-XML">&lt;?xml version="1.0" encoding="utf-8" ?&gt; &lt;configuration&gt; 	&lt;configSections&gt; 		&lt;!--以NameValueCollection键值对的形式返回配置节点中的信息，type值固定为System.Configuration.NameValueSectionHandler--&gt; 		&lt;section name="NameValueConfigNode" type="System.Configuration.NameValueSectionHandler"/&gt; 	&lt;/configSections&gt; 	&lt;!--自定义配置节点--&gt; 	&lt;NameValueConfigNode&gt; 		&lt;add key="Name一" value="Value一" /&gt; 		&lt;add key="Name二" value="Value二" /&gt; 		&lt;add key="Name三" value="Value三" /&gt; 	&lt;/NameValueConfigNode&gt;     &lt;startup&gt;          &lt;supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8" /&gt;     &lt;/startup&gt; &lt;/configuration&gt;</code></pre> <p>调用方法：这里以一个静态属性的方法获取并返回Dictionary格式（后面几种方法也采用这个方式）</p> <pre><code class="language-CSharp">/// &lt;summary&gt; /// NameValueCollection /// &lt;/summary&gt; public static Dictionary&lt;string, string&gt; NameValueConfigNode {     get     {         NameValueCollection nvc = (NameValueCollection)ConfigurationManager.GetSection("NameValueConfigNode");         Dictionary&lt;string, string&gt; result = new Dictionary&lt;string,string&gt;();          foreach (string key in nvc.AllKeys)         {              result.Add(key, nvc[key]);         }         return result;     } }</code></pre> <h4 id="dictionary">Dictionary</h4> <p>配置文件语法格式：</p> <pre><code class="language-XML">&lt;?xml version="1.0" encoding="utf-8" ?&gt; &lt;configuration&gt; 	&lt;configSections&gt; 		&lt;!--以Dictionary字典的形式返回配置节点中的信息，type固定为System.Configuration.DictionarySectionHandler--&gt; 		&lt;section name="DictionaryConfigNode" type="System.Configuration.DictionarySectionHandler"/&gt; 	&lt;/configSections&gt; 	&lt;!--自定义配置节点--&gt; 	&lt;DictionaryConfigNode&gt; 		&lt;add key="Key一" value="DictValue一" /&gt; 		&lt;add key="Key二" value="DictValue二" /&gt; 		&lt;add key="Key三" value="DictValue三" /&gt; 	&lt;/DictionaryConfigNode&gt;     &lt;startup&gt;          &lt;supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8" /&gt;     &lt;/startup&gt; &lt;/configuration&gt;</code></pre> <p>调用方法：</p> <pre><code class="language-CSharp">/// &lt;summary&gt; /// Dictionary /// &lt;/summary&gt; public static Dictionary&lt;string, string&gt; DictionaryConfigNode {     get     {         IDictionary dict = (IDictionary)ConfigurationManager.GetSection("DictionaryConfigNode");         Dictionary&lt;string, string&gt; result = new Dictionary&lt;string, string&gt;();         foreach (string key in dict.Keys)         {             result.Add(key, dict[key].ToString());         }         return result;     } }</code></pre> <h4 id="singtag">SingTag</h4> <p>配置文件语法格式：</p> <pre><code class="language-XML">&lt;?xml version="1.0" encoding="utf-8" ?&gt; &lt;configuration&gt; 	&lt;configSections&gt; 		&lt;!--基础结构处理 .config 文件中由单个 XML 标记所表示的各配置节点中的值，type固定为System.Configuration.SingleTagSectionHandler--&gt; 		&lt;section name="SingleTagConfigNode" type="System.Configuration.SingleTagSectionHandler" /&gt; 	&lt;/configSections&gt; 	&lt;!--自定义配置节点--&gt; 	&lt;!--注意，只能是单个节SingleTagSectionHandler才能处理，无论有多少个属性都能处理--&gt; 	&lt;SingleTagConfigNode PropertyOne="1" PropertyTwo="2" PropertyThree="3" PropertyFour="4" PropertyFive="5" /&gt;     &lt;startup&gt;          &lt;supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8" /&gt;     &lt;/startup&gt; &lt;/configuration&gt;</code></pre> <p>调用方法：</p> <pre><code class="language-CSharp">/// &lt;summary&gt; /// SingleTag /// &lt;/summary&gt; public static Dictionary&lt;string, string&gt; SingleTagConfigNode {     get     {         Hashtable dict = (Hashtable)ConfigurationManager.GetSection("SingleTagConfigNode");         Dictionary&lt;string, string&gt; result = new Dictionary&lt;string, string&gt;();         foreach (string key in dict.Keys)         {             result.Add(key, dict[key].ToString());         }         return result;     } }</code></pre> <p><font color="red">以上程序通过控制台应用程序测试调用效果如下:</font></p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://imgtu.com/i/Lsbv5T"  target="_blank" rel="nofollow"><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/d779a13309c55b97bfd760bd3b6571cd.jpg" alt="C#自定义配置文件方法详解_在线工具"></a></p> <h4 id="自定义配置文件-1">自定义配置文件</h4> <p>以上三种方法，只能读取应用程序的Web.config或者app.config中的配置信息，但是在大多数项目中，业务场景复杂，配置信息更是多到看不过来，所以如果都写在web.config或者app.config中的话，不太美观，也不易维护。</p> <p>那么有没有一种方法，可以根据需要，配置一个或者多个的config，并且在程序中直接调用使用的方法？<code>（问就是有^_^）</code></p> <p>下面举例一种自定义配置文件的写法<br /> 配置文件写法：<br /><kbd>&lt;configSections&gt;</kbd>节点下<kbd>&lt;section&gt;</kbd>的属性值内容与上面三个方法相同。需要注意的是自定义节点，自定义节点只需要设置configSource属性即可，属性值指向自定义配置文件的路径；<br /><font color="red">注意：路径必须要写成相对路径。</font></p> <pre><code class="language-XML">&lt;?xml version="1.0" encoding="utf-8" ?&gt; &lt;configuration&gt; 	&lt;configSections&gt; 		&lt;!--把MyConfigData节点的数据映射到MyConfigData类中--&gt; 		&lt;section name="MyConfigData" type="ConsoleApplication.ConfigFiles.ConfigFile,ConsoleApplication"/&gt; 	&lt;/configSections&gt; 	&lt;!--自定义配置节点，configSource指定自定义配置文件的路径（必须是相对路径）--&gt; 	&lt;MyConfigData configSource="ConfigFiles\Framework.config"/&gt;     &lt;startup&gt;          &lt;supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8" /&gt;     &lt;/startup&gt; &lt;/configuration&gt;</code></pre> <p>这是自定义的文件内容,</p> <pre><code class="language-XML">&lt;?xml version="1.0" encoding="utf-8" ?&gt; &lt;MyConfigData&gt; 	&lt;add key="Key一" value="自定义文件一" /&gt; 	&lt;add key="Key二" value="自定义文件二" /&gt; 	&lt;add key="Key三" value="自定义文件三" /&gt; &lt;/MyConfigData&gt;</code></pre> <p><font color="DarkGreen">程序中的调用方法与上面的方式一致，这种自定义配置文件的精髓在于，不用将所有配置信息都挤在一个文件中，而是根据项目需要合理的分成多个配置，只需要在web.config或者app.config中指定文件路径即可。其他使用方法没有差别</font></p> <h4 id="自定义结构配置文件">自定义结构配置文件</h4> <p>以上方法为常用的基本配置文件的使用方法，都是使用C#提供的类型进行获取，配置文件的节点需要按照对应格式设置，C#中还有一种可以自定义配置文件格式的调用方法，Config中科自定义节点的结构，然后在程序中需要自定义一个配置文件的类，用于接收自定义配置文件的内容；<br /> 其中使用到的类型：<br /> ConfigurationSection、ConfigurationElementCollection、ConfigurationElement、ConfigurationProperty<br /> 上面介绍的几种方法基本上已经足够日常使用，此篇文章不在进行介绍自定义格式的写法，后期会根据个人情况（是否懒惰的情况），可能会补充此部分功能，有兴趣可以去了解一下。</p> <h3 id="写在最后">写在最后</h3> <p>以上源代码已经放在Gitee上，可自行下载，<br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://gitee.com/yang-yong-666/csharp"  target="_blank" rel="nofollow">https://gitee.com/yang-yong-666/csharp</a><br /> 该项目还包含其他关于C#的帮助类，并且会持续更新！</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-78005.htm">原生实现C#和Lua相互调用-Unity3D可用</a></p>
                                        <p>下一个：<a href="/news/article-78692.htm">通州区宠物店（通州区宠物店电话）</a></p>
                                    </div>
                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-73944.htm">长沙领养宠物猫在哪里领（长沙领养宠物猫在哪里领养）</a></h4>
                <p>摘要：       今天给各位分享长沙领养宠物猫在哪里领的知识，其中也会对长沙领养宠物猫在哪里领养进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、在哪里可以领.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-37797.htm">饲料搅拌粉碎机安装图（饲料粉碎搅拌机百科）</a></h4>
                <p>摘要：       今天给各位分享饲料搅拌粉碎机安装图的知识，其中也会对饲料粉碎搅拌机百科进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、选配与安装小型饲料加.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-52310.htm">新手小白怎么开宠物店（开宠物店的利润和风险）</a></h4>
                <p>摘要：       今天给各位分享新手小白怎么开宠物店的知识，其中也会对开宠物店的利润和风险进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、新手怎么开宠物店?.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2025-1-8-clash-node-daily-updates.htm">1月8日更新19M/S，2025年最新高速SSR/Clash/Shadowrocket/V2ray订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了欧洲、美国、新加坡、韩国、加拿大、日本、香港等地区,最高速度可达19 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2025-2-9-clash-node-daily-updates.htm">2月9日更新21.1M/S，2025年最新高速Clash/V2ray/Shadowrocket/SSR订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了韩国、欧洲、新加坡、日本、香港、美国、加拿大等地区,最高速度可达21.1 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-37308.htm">动物医院好评模版（宠物医院的好评怎么写）</a></h4>
                <p>摘要：       今天给各位分享动物医院好评模版的知识，其中也会对宠物医院的好评怎么写进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、宠物医院好评怎么写...</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-43737.htm">并发编程基础底层原理学习_在线工具</a></h4>
                <p>进程 进程就是应用程序在内存中分配的空间，也就是正在运行的程序，各个进程之间互不干扰。同时进程保存着程序每一个时刻运行的状态。进程的两个基本元素是程序代码和与代码关联的数据集。进程执行的任意时刻包含了</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-41263.htm">如何从AngularJS模板的HTML中调用encodeURIComponent？</a></h4>
                <p>要创建一个调用encodeURIComponent的过滤器，以下是HTML- &lt;div&nbsp;ng-app&nbsp;=&nbsp;"app"&gt; &nbsp;&nbsp;&nbsp;&</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2025-1-19-clash-node-daily-updates.htm">1月19日更新20.8M/S，2025年最新高速V2ray/Clash/Shadowrocket/SSR订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了韩国、香港、欧洲、日本、美国、新加坡、加拿大等地区,最高速度可达20.8 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2025-1-5-clash-windows.htm">1月5日更新20.2M/S，2025年最新高速V2ray/SSR/Clash/Shadowrocket订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了日本、香港、欧洲、新加坡、美国、加拿大、韩国等地区,最高速度可达20.2 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">65</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
                                <h4><span class="badge" style="float: right;">80</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
                                <h4><span class="badge" style="float: right;">83</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <p class="m-0">Clash Node官网订阅站 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->
    <!-- all js scripts and files here -->
    <script src="/assets/website/js/frontend/clashnode/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/clashnode/jquery-3.5.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/website/js/frontend/clashnode/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/website/js/frontend/clashnode/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/website/js/frontend/clashnode/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/clashnode/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/website/js/frontend/clashnode/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>