<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashnode.github.io/news/article-41748.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>netty系列之:netty中各不同种类的channel详解</title>
    <link rel="icon" href="/assets/website/img/clashnode/favicon.ico" type="image/x-icon"/>
        <meta name="description" content="文章目录  简介 ServerChannel和它的类型   Epoll和Kqueue AbstractServerChannel ServerSocketChannel ServerDomainSoc" />
    
    <meta name="author" content="Clash Node官网订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashnode.github.io/news/article-41748.htm" />
    <meta property="og:site_name" content="Clash Node官网订阅站" />
    <meta property="og:title" content="netty系列之:netty中各不同种类的channel详解" />
    <meta property="og:image" content="https://clashnode.github.io/uploads/20240214/e1cb19dc65fe145e5652417f9d9ba379.webp" />
        <meta property="og:release_date" content="2025-01-17T09:29:08" />
    <meta property="og:updated_time" content="2025-01-17T09:29:08" />
        <meta property="og:description" content="文章目录  简介 ServerChannel和它的类型   Epoll和Kqueue AbstractServerChannel ServerSocketChannel ServerDomainSoc" />
        
    <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/clashnode/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-8B9V1K3BBT"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-8B9V1K3BBT');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> Clash Node
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">netty系列之:netty中各不同种类的channel详解</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/news/">新闻资讯</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                                <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <div class="toc"> <h3>文章目录</h3> <ul> <li><a href="#_2" rel="nofollow">简介</a></li> <li><a href="#ServerChannel_10" rel="nofollow">ServerChannel和它的类型</a></li> <li> <ul> <li><a href="#EpollKqueue_32" rel="nofollow">Epoll和Kqueue</a></li> <li><a href="#AbstractServerChannel_68" rel="nofollow">AbstractServerChannel</a></li> <li><a href="#ServerSocketChannel_72" rel="nofollow">ServerSocketChannel</a></li> <li><a href="#ServerDomainSocketChannel_87" rel="nofollow">ServerDomainSocketChannel</a></li> <li><a href="#SctpServerChannel_106" rel="nofollow">SctpServerChannel</a></li> </ul> </li> <li><a href="#Channel_112" rel="nofollow">Channel和它的类型</a></li> <li> <ul> <li><a href="#UnixChannel_124" rel="nofollow">UnixChannel</a></li> <li><a href="#SctpChannel_134" rel="nofollow">SctpChannel</a></li> <li><a href="#DatagramChannel_157" rel="nofollow">DatagramChannel</a></li> <li><a href="#DomainDatagramChannel_181" rel="nofollow">DomainDatagramChannel</a></li> <li><a href="#DuplexChannel_185" rel="nofollow">DuplexChannel</a></li> <li><a href="#AbstractChannel_201" rel="nofollow">AbstractChannel</a></li> </ul> </li> <li><a href="#_209" rel="nofollow">总结</a></li> </ul> </div> </h1> <p>channel是连接客户端和服务器端的桥梁，在netty中我们最常用的就是NIO，一般和NioEventLoopGroup配套使用的就是NioServerSocketChannel和NioSocketChannel，如果是UDP协议，那么配套使用的就是NioDatagramChannel，如果是别的协议还有其他不同的Channel类型。</p> <p>这些不同channel类型有什么区别呢？一个直观的感觉就是不同的channel和channel连接使用的协议有关系，不同的channel可能适配了不同的连接协议。</p> <p>事实到底是不是如此呢？在netty的内部实现中到底有多少种channel呢？今天一起来探讨一下。</p> </h1> <p>虽然ServerChannel继承自Channel，但是ServerChannel本身并没有添加任何新的方法：</p> <pre><code>public interface ServerChannel extends Channel {  }</code></pre> <p>所以对ServerChannel和Channel来说都可以看做是Channel，他们只是语义上有区别。</p> <p>但是因为ServerChannel继承自Channel，所以相对的ServerChannel的分类和实现要比Channel要少。所以我们先以ServerChannel为例进行讲解。</p> <p>ServerChannel的实现也有很多，我们以Abstract*开头的实现为例，下面是他们的继承关系：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220602/30e780b3e04849e8c6e7dce703992b77.jpg" alt="netty系列之:netty中各不同种类的channel详解"/></p> <p>从上图我们可以看出，ServerChannel有六个抽象类实现，分别是AbstractEpollServerChannel,AbstractKQueueServerChannel,AbstractServerChannel,ServerSocketChannel,SctpServerChannel和ServerDomainSocketChannel。</p> <p>其中前面三个抽象类同时继承自AbstractChannel。</p> <h2><a id="EpollKqueue_32" rel="nofollow"></a>Epoll和Kqueue</h2> <p>Epoll和Kqueue是两个独特的依赖于特定平台的NIO协议，其中epoll只在linux平台才支持,而kQueue则在FreeBSD、NetBSD、OpenBSD、macOS 等操作系统支持。</p> <p>我们来看下AbstractEpollServerChannel的构造函数：</p> <pre><code>    protected AbstractEpollServerChannel(int fd) {         this(new LinuxSocket(fd), false);     }      AbstractEpollServerChannel(LinuxSocket fd) {         this(fd, isSoErrorZero(fd));     }      AbstractEpollServerChannel(LinuxSocket fd, boolean active) {         super(null, fd, active);     }</code></pre> <p>所有的构造函数都需要一个LinuxSocket的参数，LinuxSocket是一个socket用来提供对于linux native方法的访问支持。</p> <p>同样的，我们再看一下AbstractKQueueServerChannel的构造函数：</p> <pre><code>    AbstractKQueueServerChannel(BsdSocket fd) {         this(fd, isSoErrorZero(fd));     }      AbstractKQueueServerChannel(BsdSocket fd, boolean active) {         super(null, fd, active);     }</code></pre> <p>AbstractKQueueServerChannel的构造函数需要传入一个BsdSocket参数，BsdSocket是一个类用来提供对BSD系统的本地方法的访问。</p> <h2><a id="AbstractServerChannel_68" rel="nofollow"></a>AbstractServerChannel</h2> <p>AbstractServerChannel我们在之前的channel一章中已经讲过了，它的唯一实现就是LocalServerChannel，用于本地的transport。</p> <h2><a id="ServerSocketChannel_72" rel="nofollow"></a>ServerSocketChannel</h2> <p>ServerSocketChannel是一个以Socket连接为基础的ServerChannel，既然是Socket连接，那么ServerSocketChannel中提供了一个InetSocketAddress类型的localAddress和一个remoteAddress, 另外还有一个ServerSocketChannelConfig属性，用来存储ServerSocketChannel相关的配置信息：</p> <pre><code>public interface ServerSocketChannel extends ServerChannel {     @Override     ServerSocketChannelConfig config();     @Override     InetSocketAddress localAddress();     @Override     InetSocketAddress remoteAddress(); }</code></pre> <h2><a id="ServerDomainSocketChannel_87" rel="nofollow"></a>ServerDomainSocketChannel</h2> <p>ServerDomainSocketChannel是使用DomainSocket来进行通讯的ServerChannel。什么是DomainSocket呢？</p> <p>DomainSocket的全称是unix domain socket，它又可以叫做IPC socket,也就是inter-process communication socket，是在unix平台上的同一服务器上的进程通信方式。</p> <p>我们知道，协议是比较复杂的，对于传统的socket通讯来说,需要定制特定的协议，然后进行封包和解包等操作，但是使用DomainSocket，可以直接将进程的数据直接拷贝，从而节约了时间，并提高了程序的效率。</p> <p>DomainSocket的地址是一个文件的路径，实际上是下面的一个结构体：</p> <pre><code>struct sockaddr_un {     sa_family_t     sun_family;     /* AF_UNIX ，2字节*/     char    sun_path[UNIX_PATH_MAX];        /* 路径名 */ };</code></pre> <p>在ServerDomainSocketChannel中的remoteAddress和localAddress的类型都是DomainSocketAddress,DomainSocketAddress有一个socketPath属性，用来存储DomainSocket文件的路径。</p> <h2><a id="SctpServerChannel_106" rel="nofollow"></a>SctpServerChannel</h2> <p>最后一个要讲解的ServerChannel是SctpServerChannel，Sctp的全称是Stream Control Transmission Protocol，他是一种类似于TCP/IP的协议。和SocketServerChannel一样，SctpServerChannel中也有一个config叫做SctpServerChannelConfig，还提供了多个bindAddress方法用来绑定InetAddress.</p> <p>有关Sctp协议的具体内容，本章不深入讨论，感兴趣的朋友可以关注后续的章节。</p> </h1> <p>Channel作为ServerChannel的父类，又有哪些实现呢？</p> <p>先来看下常用channel的实现类：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220602/ba21160ec2caf96cbbcd9be425b38462.jpg" alt="netty系列之:netty中各不同种类的channel详解"/></p> <p>看起来channel的实现类非常多，基本上都是按照channel中使用传输协议的类型来的。</p> <p>我们具体来看一下相应的实现类。</p> <h2><a id="UnixChannel_124" rel="nofollow"></a>UnixChannel</h2> <p>UnixChannel表示的unix平台上的操作，它有一个fd方法，返回一个FileDescriptor:</p> <pre><code>FileDescriptor fd();</code></pre> <p>这也是unix和windows平台的区别之一，unix平台所有的一切都可以用文件来表示。</p> <h2><a id="SctpChannel_134" rel="nofollow"></a>SctpChannel</h2> <p>在上面我讲SctpServerChannel的时候我们提过了，Sctp是一个类似于tcp/ip的协议，SctpChannel中定义了协议中需要使用到的localAddress和remoteAddress:</p> <pre><code>InetSocketAddress localAddress();  InetSocketAddress remoteAddress();</code></pre> <p>同时还定义了一些绑定方法：</p> <pre><code>    ChannelFuture bindAddress(InetAddress var1);      ChannelFuture bindAddress(InetAddress var1, ChannelPromise var2);      ChannelFuture unbindAddress(InetAddress var1);      ChannelFuture unbindAddress(InetAddress var1, ChannelPromise var2);</code></pre> <h2><a id="DatagramChannel_157" rel="nofollow"></a>DatagramChannel</h2> <p>DatagramChannel用来处理UDP协议的连接，因为UDP有广播的功能，所以DatagramChannel中提供了joinGroup的方法，来join一个multicast group:</p> <pre><code>ChannelFuture joinGroup(InetAddress multicastAddress);</code></pre> <p>当然，可以join就可以leave，还有一些leaveGroup的方法：</p> <pre><code>ChannelFuture leaveGroup(InetAddress multicastAddress);</code></pre> <p>还可以block某些地址在给定的networkInterface上的广播：</p> <pre><code>ChannelFuture block(             InetAddress multicastAddress, NetworkInterface networkInterface,             InetAddress sourceToBlock);</code></pre> <p>这些方法都和UDP的特性是息息相关的。</p> <h2><a id="DomainDatagramChannel_181" rel="nofollow"></a>DomainDatagramChannel</h2> <p>DomainDatagramChannel和之前提到的ServerDomainSocketChannel一样，都是使用的IPC内部进程通讯技术，直接进行进程的拷贝，免去了协议解析等步骤，提升了处理速度。</p> <h2><a id="DuplexChannel_185" rel="nofollow"></a>DuplexChannel</h2> <p>DuplexChannel从名字看就是一个双向的channel，duplex Channel有一个特点，就是channel的两边可以独立的关闭，所以有下面的方法：</p> <pre><code>boolean isInputShutdown();  ChannelFuture shutdownInput();  boolean isOutputShutdown();  ChannelFuture shutdownOutput();</code></pre> <p>DuplexChannel的是实现有很多种，比如常见的NIOSocketChannel，KQueueSocketChannel,EpollSocketChannel等。</p> <h2><a id="AbstractChannel_201" rel="nofollow"></a>AbstractChannel</h2> <p>另外一个channel的非常重要的子类就是AbstractChannel，AbstractChannel有三个非常重要的实现，分别是AbstractNioChannel,AbstractKQueueChannel和AbstractEpollChannel。</p> <p>这三个类使用的都是NIO技术，不同的是第一个使用的是select，后面两个使用的是平台独有的KQueue和Epoll技术。</p> <p>其中NIO又可以分为NioByteChannel和NioMessageChannel,KQueue和Epoll又可以分为StreamChannel和DatagramChannel。</p> </h1> <p>以上就是channel在netty中的基本实现和分类。后面我们会详解讲解具体的channel到底是如何实现的。</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-41264.htm">C#实现文件Move和Copy操作_C#教程_</a></p>
                                        <p>下一个：<a href="/news/article-41749.htm">动物疫苗间隔时间多长有效期（动物疫苗注射后多久产生抗体）</a></p>
                                    </div>
                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2024-10-17-clash-node-daily-updates.htm">10月17日更新21.5M/S，2024年最新高速Clash/V2ray/SSR/Shadowrocket订阅链接免费节点订阅</a></h4>
                <p>这一次的节点更新覆盖了日本、欧洲、加拿大、香港、韩国、美国、新加坡等地区,最高速度可达21.5 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-21784.htm">我们如何借助组函数COUNT（*）和GROUP BY子句知道列中值的重复？</a></h4>
                <p>我们可以使用COUNT（*）和GROUP BY子句来找出列中值的重复。以下是示例，使用表“ Student”的“名称”列上的COUNT（*）和GROUP BY子句进行演示- mysql&gt;&nbs</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2024-12-27-clash-windows.htm">12月27日更新19M/S，2024年最新高速SSR/Shadowrocket/V2ray/Clash订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了香港、新加坡、韩国、日本、加拿大、美国、欧洲等地区,最高速度可达19 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2024-11-26-clash-node.htm">11月26日更新18.5M/S，2024年最新高速SSR/V2ray/Shadowrocket/Clash订阅链接免费节点订阅</a></h4>
                <p>这一次的节点更新覆盖了韩国、加拿大、美国、日本、新加坡、香港、欧洲等地区,最高速度可达18.5 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-37798.htm">同城免费领养宠物怎么领取 同城免费领养宠物怎么领取的</a></h4>
                <p>摘要：       大家好，今天小编关注到一个比较有意思的话题，就是关于同城免费领养宠物怎么领取的问题，于是小编就整理了4个相关介绍同城免费领养宠物怎么领取的解答，让我们一起看看吧。58上怎么发布免费</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-36819.htm">vue3 vue-router的使用</a></h4>
                <p>前端路由是如何做到URL和内容进行映射呢？监听URL的改变 目录 前端路由原理 vue-router的使用 &nbsp;默认路由，重定向 hash与history模式 router-link 路由懒加</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2025-1-7-clash-node.htm">1月7日更新23M/S，2025年最新高速SSR/V2ray/Clash/Shadowrocket订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了日本、新加坡、加拿大、韩国、欧洲、香港、美国等地区,最高速度可达23 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2024-11-29-free-ssr-node.htm">11月29日更新20.2M/S，2024年最新高速V2ray/Clash/Shadowrocket/SSR订阅链接免费节点订阅</a></h4>
                <p>这一次的节点更新覆盖了美国、香港、新加坡、日本、欧洲、韩国、加拿大等地区,最高速度可达20.2 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-31571.htm">如何在IDEA 中配置 Maven</a></h4>
                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Maven 是一个能使我们的java程序开发节省时间和精力，是开发变得相对简单，还能使开发规范化的工具。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-21328.htm">天津宠物用品超市（天津宠物用品超市有哪些）</a></h4>
                <p>摘要：       本篇文章给大家谈谈天津宠物用品超市，以及天津宠物用品超市有哪些对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、天津天诺宠物用品销售有限公司怎么样?...  </p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">57</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
                                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
                                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
                                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <p class="m-0">Clash Node官网订阅站 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->
    <!-- all js scripts and files here -->
    <script src="/assets/website/js/frontend/clashnode/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/clashnode/jquery-3.5.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/website/js/frontend/clashnode/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/website/js/frontend/clashnode/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/website/js/frontend/clashnode/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/clashnode/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/website/js/frontend/clashnode/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>