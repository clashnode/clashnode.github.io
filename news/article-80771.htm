<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashnode.github.io/news/article-80771.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>STL之vector</title>
    <link rel="icon" href="/assets/website/img/clashnode/favicon.ico" type="image/x-icon"/>
        <meta name="description" content="目录 vector概念 vector的遍历 1、[ ]的重载 2、迭代器 3、范围for vector的模拟实现 成员变量 reserve函数与拷贝构造 增删函数 push_back pop_back" />
    
    <meta name="author" content="Clash Node官网订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashnode.github.io/news/article-80771.htm" />
    <meta property="og:site_name" content="Clash Node官网订阅站" />
    <meta property="og:title" content="STL之vector" />
    <meta property="og:image" content="https://clashnode.github.io/uploads/20240214/72b0aaa8811f609f03eeb6123bd29eae.webp" />
        <meta property="og:release_date" content="2025-03-25T08:16:11" />
    <meta property="og:updated_time" content="2025-03-25T08:16:11" />
        <meta property="og:description" content="目录 vector概念 vector的遍历 1、[ ]的重载 2、迭代器 3、范围for vector的模拟实现 成员变量 reserve函数与拷贝构造 增删函数 push_back pop_back" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="STL之vector">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/clashnode/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-8B9V1K3BBT"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-8B9V1K3BBT');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> Clash Node                </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">STL之vector</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/news/">新闻资讯</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                                <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <p id="main-toc"><strong>目录</strong></p> <p id="vector%E6%A6%82%E5%BF%B5-toc" style="margin-left:40px;"><a href="#vector%E6%A6%82%E5%BF%B5" rel="nofollow">vector概念</a></p> <p id="vector%E7%9A%84%E9%81%8D%E5%8E%86-toc" style="margin-left:40px;"><a href="#vector%E7%9A%84%E9%81%8D%E5%8E%86" rel="nofollow">vector的遍历</a></p> <p id="1%E3%80%81%5B%20%5D%E7%9A%84%E9%87%8D%E8%BD%BD-toc" style="margin-left:80px;"><a href="#1%E3%80%81%5B%20%5D%E7%9A%84%E9%87%8D%E8%BD%BD" rel="nofollow">1、[ ]的重载</a></p> <p id="2%E3%80%81%E8%BF%AD%E4%BB%A3%E5%99%A8-toc" style="margin-left:80px;"><a href="#2%E3%80%81%E8%BF%AD%E4%BB%A3%E5%99%A8" rel="nofollow">2、迭代器</a></p> <p id="3%E3%80%81%E8%8C%83%E5%9B%B4for-toc" style="margin-left:80px;"><a href="#3%E3%80%81%E8%8C%83%E5%9B%B4for" rel="nofollow">3、范围for</a></p> <p id="vector%E7%9A%84%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0-toc" style="margin-left:0px;"><a href="#vector%E7%9A%84%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0" rel="nofollow">vector的模拟实现</a></p> <p id="%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F-toc" style="margin-left:40px;"><a href="#%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F" rel="nofollow">成员变量</a></p> <p id="reserve%E5%87%BD%E6%95%B0%E4%B8%8E%E6%8B%B7%E8%B4%9D%E6%9E%84%E9%80%A0-toc" style="margin-left:40px;"><a href="#reserve%E5%87%BD%E6%95%B0%E4%B8%8E%E6%8B%B7%E8%B4%9D%E6%9E%84%E9%80%A0" rel="nofollow">reserve函数与拷贝构造</a></p> <p id="%E5%A2%9E%E5%88%A0%E5%87%BD%E6%95%B0-toc" style="margin-left:40px;"><a href="#%E5%A2%9E%E5%88%A0%E5%87%BD%E6%95%B0" rel="nofollow">增删函数</a></p> <p id="push_back-toc" style="margin-left:80px;"><a href="#push_back" rel="nofollow">push_back</a></p> <p id="pop_back-toc" style="margin-left:80px;"><a href="#pop_back" rel="nofollow">pop_back</a></p> <p id="%E8%BF%AD%E4%BB%A3%E5%99%A8-toc" style="margin-left:40px;"><a href="#%E8%BF%AD%E4%BB%A3%E5%99%A8" rel="nofollow">迭代器</a></p> <p id="%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD-toc" style="margin-left:40px;"><a href="#%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD" rel="nofollow">运算符重载</a></p> <p id="%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6-toc" style="margin-left:80px;"><a href="#%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6" rel="nofollow">赋值运算符</a></p> <p id="%5B%20%5D%E8%BF%90%E7%AE%97%E7%AC%A6-toc" style="margin-left:80px;"><a href="#%5B%20%5D%E8%BF%90%E7%AE%97%E7%AC%A6" rel="nofollow">[ ]运算符</a></p> <p id="%E5%85%B6%E4%BB%96%E5%87%BD%E6%95%B0-toc" style="margin-left:40px;"><a href="#%E5%85%B6%E4%BB%96%E5%87%BD%E6%95%B0" rel="nofollow">其他函数</a></p> <hr id="hr-toc"/> <p><img fetchpriority="high" decoding="async" alt="" height="203" src="http://img.555519.xyz/uploads3/20220722/b7efec10cd0fae79ce979dc3164d418a.jpg"></p> <h2 id="vector%E6%A6%82%E5%BF%B5">vector概念</h2> <p style="margin-left:0;">1、vector是表示<strong>可变大小数组</strong>的序列容器。</p> <p style="margin-left:0;">2、就像数组一样，vector也采用的连续存储空间来存储元素。也就是意味着可以采用下标对vector的元素进行访问，和数组一样高效。但是又不像数组，它的大小是可以动态改变的，而且它的大小会被容器自动处理。</p> <p style="margin-left:0;">3、本质讲，vector使用动态分配数组来存储它的元素。</p> <p style="margin-left:0px;text-align:justify;">4、vector分配空间策略：vector会分配一些额外的空间以适应可能的增长，因为<strong>存储空间比实际需要的存储空间更大</strong>。不同的库采用不同的策略权衡空间的使用和重新分配。但是无论如何，重新分配都应该是对数增长的间隔大小，以至于在末尾插入一个元素的时候是在常数时间的复杂度完成的。</p> <h2 id="vector%E7%9A%84%E9%81%8D%E5%8E%86">vector的遍历</h2> <pre><code class="language-cpp">vector&lt;int&gt; v; v.push_back(1); v.push_back(2); v.push_back(3); v.push_back(4);</code></pre> <h3 id="1%E3%80%81%5B%20%5D%E7%9A%84%E9%87%8D%E8%BD%BD">1、[ ]的重载</h3> <pre><code class="language-cpp">for (size_t i = 0; i &lt; v.size(); i++) { 	cout &lt;&lt; v[i] &lt;&lt; " "; }</code></pre> <h3 id="2%E3%80%81%E8%BF%AD%E4%BB%A3%E5%99%A8">2、迭代器</h3> <pre><code class="language-cpp">vector&lt;int&gt;::iterator it = v.begin(); while (it != v.end()) { 	cout &lt;&lt; *it &lt;&lt; " "; 	it++; } cout &lt;&lt; endl;</code></pre> <h3 id="3%E3%80%81%E8%8C%83%E5%9B%B4for">3、范围for</h3> <pre><code class="language-cpp">for (auto&amp; e : v) 	cout &lt;&lt; e; cout &lt;&lt; endl;</code></pre> </h1> <p>vector是一个类模板，参考stl3.0的写法</p> <h2 id="%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F">成员变量</h2> <p>库里面的写法</p> <p><img decoding="async" alt="" height="54" src="http://img.555519.xyz/uploads3/20220722/407b794e1e52de225bf765a0104d4b81.jpg"></p> <p>&nbsp;这里的iterator是被typdef了一下</p> <p><img decoding="async" alt="" height="205" src="http://img.555519.xyz/uploads3/20220722/3f0c0a3347089a86ec7bc9582dd4ade8.jpg"></p> <p>所以他的类型是 T*。传入int 就为int*，传入string就为string*。</p> <p>start用来标注数组的起点，finish用来标注数组有效长度的尾部，endofstorage标注数组的尾部。</p> <p>所以基本上的框架就是下面这样</p> <p><img loading="lazy" decoding="async" alt="" height="296" src="http://img.555519.xyz/uploads3/20220722/1ecdced8c79a03bc5ed15815e0be5bf4.jpg"></p> <pre><code class="language-cpp">template&lt;class T&gt; class myvector { public:     typedef T* iterator;     //--------构造函数---------     myvector() 	    :_start(nullptr) 	    ,_finish(nullptr) 	    ,_endofstorage(nullptr)     {}     ~myvector()     { 	    delete[] _start; 	    _start = nullptr; 	    _finish = nullptr; 	    _endofstorage = nullptr;     }  private: 	iterator _start; 	iterator _finish; 	iterator _endofstorage; };</code></pre> <h2 id="reserve%E5%87%BD%E6%95%B0%E4%B8%8E%E6%8B%B7%E8%B4%9D%E6%9E%84%E9%80%A0">reserve函数与拷贝构造</h2> <p>先谈谈reserve函数，因为插入元素首先是增容问题，自我感觉也是这个类的核心。</p> <p>先看一下下面的代码</p> <pre><code class="language-cpp">void reserve(size_t cap) { 	if (cap &gt; capacity()) 	{ 		size_t len = size(); 		T* tmp = new T[cap]; 		if (_start)//防止为空的时候增容 		{ 			memcpy(tmp, _start, len * sizeof(T));//拷贝 			delete[] _start;//释放原来的空间 		} 		_start = tmp; 		_finish = _start + len; 		_endofstorage = _start + cap; 	} }</code></pre> <p>当大于实际容量时，才增容，否则不增容。增容的逻辑就是开辟一块新容量的空间，将之前的内容拷贝过来（如果没有之前相等），然后更改对应的三个指针。</p> <p>上面的代码表面看着没什么问题，其实存在一个很严重的bug，那就是<strong>浅拷贝。</strong></p> <p style="text-align:justify;">memcpy 将_start内容拷贝到tmp里面，如果是基本类型的数据，还不会出bug，如果是自定义类型，就有可能会出错。例如string类型，string类型里面有一个char*类型的指针，该指针指向了一块堆上的空间，如果只是单独的把_start的内容拷贝给tmp中，则一旦释放掉_start，会调用string的析构函数，则tmp里面的内容都被析构了，代码会崩溃。</p> <p style="text-align:justify;">正确的方法</p> <pre><code class="language-cpp">void reserve(size_t cap) { 	if (cap &gt; capacity()) 	{ 		size_t len = size(); 		T* tmp = new T[cap]; 		if (_start) 		{ 			for (size_t i = 0; i &lt; len; i++) 			{ 				tmp[i] = _start[i];//调用类型T自带的赋值完成深拷贝 			} 			delete[] _start; 		} 		_start = tmp; 		_finish = _start + len; 		_endofstorage = _start + cap; 	}</code></pre> <p><strong>拷贝构造</strong></p> <pre><code class="language-cpp">myvector(const myvector&lt;T&gt;&amp; v)//深拷贝     :_start(nullptr)     ,_finish(nullptr)     ,_endofstorage(nullptr) { 	reserve(v.capacity()); 	for (size_t i = 0; i &lt; v.size(); i++) 	{ 		*_finish = v[i]; 		_finish++; 	} }</code></pre> <h2 id="%E5%A2%9E%E5%88%A0%E5%87%BD%E6%95%B0">增删函数</h2> <h3 id="push_back">push_back</h3> <p>尾插，如果_finish == endofstorage，则需要增容，注意刚开始为为空时的情况。</p> <pre><code class="language-cpp">void push_back(const T&amp; x) { 	if (_finish == _endofstorage) 	{ 		size_t newcapacity = capacity() == 0 ? 2 : capacity() * 2; 		reserve(newcapacity); 	} 	*_finish = x; 	_finish++; }</code></pre> <h3 id="pop_back">pop_back</h3> <p>尾删，在入口处判断是否合法，即_start&lt;_finish。</p> <pre><code class="language-cpp">void pop_back() { 	assert(_start &lt; _finish);//首先得判断是否为空数组 	_finish--; }</code></pre> <h2 id="%E8%BF%AD%E4%BB%A3%E5%99%A8">迭代器</h2> <p>vector的迭代器也比较简单，和string的类似。</p> <pre><code class="language-cpp">iterator begin() { 	return _start; } iterator end() { 	return _finish; } const_iterator begin() const//const迭代器 typedef const T* const_iterator; { 	return _start; } const_iterator end() const { 	return _finish; }</code></pre> <h2 id="%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD">运算符重载</h2> <h3 id="%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6">赋值运算符</h3> <pre><code class="language-cpp">const myvector&lt;T&gt;&amp; operator=(const myvector&lt;T&gt;&amp; v) { 	delete[] _start; 	_start = nullptr; 	_finish = nullptr; 	_endofstorage = nullptr;//先清除之前的内容，然后记得置空，不然重新开辟空间会出错 	reserve(v.capacity()); 	for (size_t i = 0; i &lt; v.size(); i++) 	{ 		*_finish = v[i]; 		_finish++; 	} 	return *this; }</code></pre> <p>现代写法思路一样，用swap函数，利用临时对象的特性，交换空间</p> <pre><code class="language-cpp">void swap(myvector&lt;T&gt;&amp; v) { 	std::swap(_start, v._start); 	std::swap(_finish, v._finish); 	std::swap(_endofstorage, v._endofstorage); }  myvector&lt;T&gt;&amp; operator=(myvector&lt;T&gt; v) { 	swap(v); 	return *this; }</code></pre> <h3 id="%5B%20%5D%E8%BF%90%E7%AE%97%E7%AC%A6">[ ]运算符</h3> <pre><code class="language-cpp">T&amp; operator[](size_t i) { 	assert(i &lt; size()); 	return _start[i]; } const T&amp; operator[](size_t i)const { 	assert(i &lt; size()); 	return _start[i]; }</code></pre> <h2 id="%E5%85%B6%E4%BB%96%E5%87%BD%E6%95%B0">其他函数</h2> <pre><code class="language-cpp">size_t size()const//获取大小 { 	return _finish - _start; } size_t capacity()const//获取容量 { 	return _endofstorage - _start; } void resize(size_t n, const T&amp; val = T())//修改size的大小，分情况 { 	if (n &lt; size()) 	{ 		_finish -= size()-n; 	} 	else  	{	 		if (n &gt; capacity()) 		{ 			reserve(n); 		} 		size_t tmp = n - size(); 		while (tmp) 		{ 			*_finish = val; 			_finish++; 			tmp--; 		} 	} }</code></pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-80073.htm">新手养猫入门必备攻略有哪些（新手养猫宝典）</a></p>
                                        <p>下一个：<a href="/news/article-80772.htm">十大冷门暴利生意(最挣钱没人干的行业有哪些?)（冷门生意有哪些十大冷门生意利润高）</a></p>
                                    </div>
                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2025-2-23-free-subscribe-node.htm">2月23日更新20.3M/S，2025年最新高速V2ray/SSR/Clash/Shadowrocket订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了日本、加拿大、新加坡、韩国、欧洲、香港、美国等地区,最高速度可达20.3 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-70633.htm">公务员国考报名时间2022具体时间（公务员国考报名时间2022年几月）</a></h4>
                <p>摘要：       本篇文章给大家谈谈公务员国考报名时间2022具体时间，以及公务员国考报名时间2022年几月对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、2022国考什..</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2025-2-18-free-ssr-subscribe.htm">2月18日更新19.2M/S，2025年最新高速V2ray/Shadowrocket/Clash/SSR订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了韩国、香港、美国、日本、加拿大、欧洲、新加坡等地区,最高速度可达19.2 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-64294.htm">和田宠物医院污水处理方案（宠物医院污水处理方式）</a></h4>
                <p>摘要：       今天给各位分享和田宠物医院污水处理方案的知识，其中也会对宠物医院污水处理方式进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、医院污水处理操.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2025-1-15-free-high-speed-nodes.htm">1月15日更新18.4M/S，2025年最新高速Shadowrocket/Clash/V2ray/SSR订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了美国、香港、加拿大、新加坡、欧洲、日本、韩国等地区,最高速度可达18.4 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-72606.htm">宠爱国际动物医院电话（宠爱国际动物诊疗中心）</a></h4>
                <p>摘要：       本篇文章给大家谈谈宠爱国际动物医院电话，以及宠爱国际动物诊疗中心对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、石家庄的宠物医院哪一家比较好?...    </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2025-1-24-free-v2ray.htm">1月24日更新20.1M/S，2025年最新高速V2ray/SSR/Clash/Shadowrocket订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了欧洲、加拿大、美国、新加坡、韩国、香港、日本等地区,最高速度可达20.1 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-38781.htm">动物疫苗间隔多久打一次（动物疫苗打几次）</a></h4>
                <p>摘要：       今天给各位分享动物疫苗间隔多久打一次的知识，其中也会对动物疫苗打几次进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、狗狗要隔多久打一次疫苗.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2025-1-7-clash-node.htm">1月7日更新23M/S，2025年最新高速SSR/V2ray/Clash/Shadowrocket订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了日本、新加坡、加拿大、韩国、欧洲、香港、美国等地区,最高速度可达23 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2025-2-7-free-node-subscribe.htm">2月7日更新22.2M/S，2025年最新高速Clash/Shadowrocket/SSR/V2ray订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了香港、新加坡、日本、加拿大、韩国、美国、欧洲等地区,最高速度可达22.2 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">77</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
                                <h4><span class="badge" style="float: right;">80</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
                                <h4><span class="badge" style="float: right;">83</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <p class="m-0">Clash Node官网订阅站 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->
    <!-- all js scripts and files here -->
    <script src="/assets/website/js/frontend/clashnode/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/clashnode/jquery-3.5.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/website/js/frontend/clashnode/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/website/js/frontend/clashnode/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/website/js/frontend/clashnode/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/clashnode/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/website/js/frontend/clashnode/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>