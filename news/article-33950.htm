<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashnode.github.io/news/article-33950.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Azure DevOps通过Azure Devops部署一个.NET Core WebAPI</title>
    <link rel="icon" href="/assets/website/img/clashnode/favicon.ico" type="image/x-icon"/>
        <meta name="description" content="前几篇文章中，我们讨论了如何通过流水线实现项目的编译、上传、打包、部署等操作，今天我们来实现一套完整的流程，把之前碎片化的知识点给串起来。 本次我们使用一个ASP.NET Core的WebApi项目来" />
    
    <meta name="author" content="Clash Node官网订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashnode.github.io/news/article-33950.htm" />
    <meta property="og:site_name" content="Clash Node官网订阅站" />
    <meta property="og:title" content="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI" />
    <meta property="og:image" content="https://clashnode.github.io/uploads/20240214/72b0aaa8811f609f03eeb6123bd29eae.webp" />
        <meta property="og:release_date" content="2025-01-01T06:38:39" />
    <meta property="og:updated_time" content="2025-01-01T06:38:39" />
        <meta property="og:description" content="前几篇文章中，我们讨论了如何通过流水线实现项目的编译、上传、打包、部署等操作，今天我们来实现一套完整的流程，把之前碎片化的知识点给串起来。 本次我们使用一个ASP.NET Core的WebApi项目来" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/clashnode/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-8B9V1K3BBT"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-8B9V1K3BBT');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> Clash Node                </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">Azure DevOps通过Azure Devops部署一个.NET Core WebAPI</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/news/">新闻资讯</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                                <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<p>前几篇文章中，我们讨论了如何通过流水线实现项目的编译、上传、打包、部署等操作，今天我们来实现一套完整的流程，把之前碎片化的知识点给串起来。</p> <p>本次我们使用一个ASP.NET Core的WebApi项目来进行项目的演示，后面也会写java和golang的。</p> <p>首先我们先创建一个ASP.NET Core WebAPI的模板项目，使用IDE创建就可以，我用的是jb全家桶的rider.</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/50562ef220c905f1355e4d491a724961.jpg" alt="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI"></p> <p>创建完成之后，我们稍微对项目做一点点修改，主要修改的内容为：关闭HTTP重定向，关闭鉴权，更改启动端口为5001.</p> <p>在Program.cs中删除&nbsp;HTTP重定向，鉴权的代码，在luanchsetting.json中更改启动端口为5000，注意这里改的只是你本地debug时候的端口和编译后部署时的不是一个配置。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/6a4962c0af3a8023ca29474ca6bc9c03.jpg" alt="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI"></p> <p>&nbsp;这些搞好之后，启动项目，会自动弹开swagger的页面，我们访问一下里面的模板接口，可以看到返回了一个标准的json数据结构。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/26cf822ecd37e69c38d4be8218596106.jpg" alt="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI"></p> <p>这些都准备好之后，我们把我们的代码推送到仓库里去，创建仓库的步骤不在赘述，我在系列文章的第一篇里已经做了介绍：《<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/Tassdar/p/15981395.html"  rel="nofollow">Azure DevOps (一) 托管自己的Git仓库</a>》</p> <p>代码推送好之后，我们开始创建编译流水线来编译我们的webapi代码。</p> <p>点击流水线，创建流水线之后右侧第一个选项就是.NET Core。毕竟是微软的亲儿子，地位都不一样，点击添加之后，我们可以看到有很多的选项</p> <p>来执行不同的阶段，我们本次的目标是部署项目，所以我们使用publish来执行。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/7838c25899968eb741761906cd1e9c3a.jpg" alt="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI"></p> <p>&nbsp;添加的时候这里要注意下把web project的勾给取消掉，打这个勾是默认编译mvc项目的他会去找你的wwwroot文件和webconfig</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/83bf7b5f405655dabd90d6875e6209ff.jpg" alt="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI"></p> <p>勾选完之后我们执行一下编译，然后就发现了一个天大的雷，身为微软的亲儿子，这个.NET Core的编译插件居然TM的不支持.NET 6，是的，你没听错，我都怀疑这爹不是亲的。(╯‵□′)╯︵┻━┻</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/0469b722e4a82fce37dd45a94be71b99.jpg" alt="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI"></p> <p>&nbsp;既然出了这档子事儿，我们也只能自己想办法了，我选择的是自己下载.NET6的SDK，自己编译。</p> <p>我们打开.net core的官网，选择linux安装.net core sdk&nbsp; 网站地址：https://docs.microsoft.com/zh-cn/dotnet/core/install/linux-ubuntu#2110-</p> <p>因为我们流水线的运行环境是乌班图，所以我装的是乌班图的。</p> <p>安装命令如下：</p> <div class="cnblogs_code"> <pre>wget https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">packages.microsoft.com/config/ubuntu/21.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb</span> sudo dpkg -i packages-microsoft-<span style="color: rgba(0, 0, 0, 1)">prod.deb rm packages</span>-microsoft-<span style="color: rgba(0, 0, 0, 1)">prod.deb sudo apt</span>-<span style="color: rgba(0, 0, 255, 1)">get</span><span style="color: rgba(0, 0, 0, 1)"> update; \ sudo apt</span>-<span style="color: rgba(0, 0, 255, 1)">get</span> install -y apt-transport-https &amp;&amp;<span style="color: rgba(0, 0, 0, 1)"> \ sudo apt</span>-<span style="color: rgba(0, 0, 255, 1)">get</span> update &amp;&amp;<span style="color: rgba(0, 0, 0, 1)"> \ sudo apt</span>-<span style="color: rgba(0, 0, 255, 1)">get</span> install -y dotnet-sdk-<span style="color: rgba(128, 0, 128, 1)">6.0</span></pre> </div> <p>然后我们在执行一下编译命令 dotnet publish</p> <p>最后我们整理一下azure的流水线脚本，因为没有插件可用，所以这次的脚本需要我们自己纯手打，我们在script节点中加入sdk安装命令，然后创建第二个scprit节点用来进行项目的编译</p> <p>当然全部写在一个里面也没有什么问题，但是还是建议分开，看着清爽。</p> <p>脚本如下：</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)"># Starter pipeline # Start with a minimal pipeline that you can customize to build and deploy your code. # Add steps that build, run tests, deploy, and more: # https:</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">aka.ms/yaml</span><span style="color: rgba(0, 0, 0, 1)"> trigger:</span>-<span style="color: rgba(0, 0, 0, 1)"> main  pool:   vmImage: ubuntu</span>-<span style="color: rgba(0, 0, 0, 1)">latest  steps:</span>- script: echo Hello, world!<span style="color: rgba(0, 0, 0, 1)">   displayName:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Run a one-line script</span><span style="color: rgba(128, 0, 0, 1)">'</span>  - script: |<span style="color: rgba(0, 0, 0, 1)">     echo Add other tasks to build, test, and deploy your project.     echo See https:</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">aka.ms/yaml</span>     wget https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">packages.microsoft.com/config/ubuntu/21.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb</span>     sudo dpkg -i packages-microsoft-<span style="color: rgba(0, 0, 0, 1)">prod.deb     rm packages</span>-microsoft-<span style="color: rgba(0, 0, 0, 1)">prod.deb     sudo apt</span>-<span style="color: rgba(0, 0, 255, 1)">get</span><span style="color: rgba(0, 0, 0, 1)"> update; \     sudo apt</span>-<span style="color: rgba(0, 0, 255, 1)">get</span> install -y apt-transport-https &amp;&amp;<span style="color: rgba(0, 0, 0, 1)"> \     sudo apt</span>-<span style="color: rgba(0, 0, 255, 1)">get</span> update &amp;&amp;<span style="color: rgba(0, 0, 0, 1)"> \     sudo apt</span>-<span style="color: rgba(0, 0, 255, 1)">get</span> install -y dotnet-sdk-<span style="color: rgba(128, 0, 128, 1)">6.0</span><span style="color: rgba(0, 0, 0, 1)">   displayName:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Run a multi-line script</span><span style="color: rgba(128, 0, 0, 1)">'</span> -<span style="color: rgba(0, 0, 0, 1)"> script:    cd</span>/home/vsts/work/<span style="color: rgba(128, 0, 128, 1)">1</span>/<span style="color: rgba(0, 0, 0, 1)">s;    dotnet publish;    cd</span>/home/vsts/work/<span style="color: rgba(128, 0, 128, 1)">1</span>/s/azure_dotnet_app/bin/Debug/net6.<span style="color: rgba(128, 0, 128, 1)">0</span>/publish/<span style="color: rgba(0, 0, 0, 1)">;    ls   displayName:</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">publish dotnet</span><span style="color: rgba(128, 0, 0, 1)">"</span></pre> </div> <p>然后我们运行一下看看效果，可以看到成功的安装了SDK6</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/02d1e662513a2e37078b1e0615970762.jpg" alt="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI"></p> <p>然后执行dotnet publish,这次成功完成了编译</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/27b25719be9743382d1a58c6fcb1a304.jpg" alt="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI"></p> <p>&nbsp;编译完之后，我们需要添加一下制品上传步骤，和我们之前的文章中一样，我们需要把制品上传到流水线的仓库上去方便后面使用。</p> <p>编辑流水线，添加制品上传，目录选择我们的publish的目标目录，最后完成的流水线脚本如下：</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)"># Starter pipeline # Start with a minimal pipeline that you can customize to build and deploy your code. # Add steps that build, run tests, deploy, and more: # https:</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">aka.ms/yaml</span><span style="color: rgba(0, 0, 0, 1)"> trigger:</span>-<span style="color: rgba(0, 0, 0, 1)"> main  pool:   vmImage: ubuntu</span>-<span style="color: rgba(0, 0, 0, 1)">latest  steps:</span>- script: echo Hello, world!<span style="color: rgba(0, 0, 0, 1)">   displayName:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Run a one-line script</span><span style="color: rgba(128, 0, 0, 1)">'</span>  - script: |<span style="color: rgba(0, 0, 0, 1)">     echo Add other tasks to build, test, and deploy your project.     echo See https:</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">aka.ms/yaml</span>     wget https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">packages.microsoft.com/config/ubuntu/21.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb</span>     sudo dpkg -i packages-microsoft-<span style="color: rgba(0, 0, 0, 1)">prod.deb     rm packages</span>-microsoft-<span style="color: rgba(0, 0, 0, 1)">prod.deb     sudo apt</span>-<span style="color: rgba(0, 0, 255, 1)">get</span><span style="color: rgba(0, 0, 0, 1)"> update; \     sudo apt</span>-<span style="color: rgba(0, 0, 255, 1)">get</span> install -y apt-transport-https &amp;&amp;<span style="color: rgba(0, 0, 0, 1)"> \     sudo apt</span>-<span style="color: rgba(0, 0, 255, 1)">get</span> update &amp;&amp;<span style="color: rgba(0, 0, 0, 1)"> \     sudo apt</span>-<span style="color: rgba(0, 0, 255, 1)">get</span> install -y dotnet-sdk-<span style="color: rgba(128, 0, 128, 1)">6.0</span><span style="color: rgba(0, 0, 0, 1)">   displayName:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Run a multi-line script</span><span style="color: rgba(128, 0, 0, 1)">'</span> -<span style="color: rgba(0, 0, 0, 1)"> script:    cd</span>/home/vsts/work/<span style="color: rgba(128, 0, 128, 1)">1</span>/<span style="color: rgba(0, 0, 0, 1)">s;    dotnet publish;    cd</span>/home/vsts/work/<span style="color: rgba(128, 0, 128, 1)">1</span>/s/azure_dotnet_app/bin/Debug/net6.<span style="color: rgba(128, 0, 128, 1)">0</span>/publish/<span style="color: rgba(0, 0, 0, 1)">;    ls   displayName:</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">publish dotnet</span><span style="color: rgba(128, 0, 0, 1)">"</span>   - task: PublishBuildArtifacts@<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">   inputs:     PathtoPublish:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">/home/vsts/work/1/s/azure_dotnet_app/bin/Debug/net6.0/publish/</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">     ArtifactName:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">dotnet_app</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">     publishLocation:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Container</span><span style="color: rgba(128, 0, 0, 1)">'</span></pre> </div> <p>完成之后运行流水线，我们就可以在流水线的运行脚本结果中看到我们的流水线制品</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/83d165f37edab8c3d84f62fc89fbc4f0.jpg" alt="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/a4a73aefe6c1866a88719db31570b524.jpg" alt="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI"></p> <p>&nbsp;然后接下来，我们去创建发布流水线，发布流水线的内容非常简单，前几篇的文章中我们使用的是FTP，后来我发现SFTP更好用，所以这里我们用SFTP</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/ceee1b6074ce9ae93fc15dab632e518d.jpg" alt="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI"></p> <p>&nbsp;然后我们去准备一下服务器的环境，在服务器上安装一下sdk和nginx，顺道配置一下守护进程，代码如下：</p> <p>centos安装sdk:</p> <div class="cnblogs_code"> <pre>sudo rpm -Uvh https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">packages.microsoft.com/config/centos/7/packages-microsoft-prod.rpm</span> sudo yum install dotnet-sdk-<span style="color: rgba(128, 0, 128, 1)">6.0</span></pre> </div> <p>安装nginx</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">yum install nginx systemctl restart nginx</span></pre> </div> <p>配置守护进程</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">[Unit] Description</span>=<span style="color: rgba(0, 0, 0, 1)">Example .NET Web API App running on Ubuntu  [Service] WorkingDirectory</span>=/home/<span style="color: rgba(0, 0, 0, 1)">dotnet_app ExecStart</span>=/usr/bin/dotnet /home/dotnet_app/<span style="color: rgba(0, 0, 0, 1)">azure_dotnet_app.dll Restart</span>=<span style="color: rgba(0, 0, 0, 1)">always # Restart service after</span><span style="color: rgba(128, 0, 128, 1)">10</span> seconds<span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> the dotnet service crashes: RestartSec</span>=<span style="color: rgba(128, 0, 128, 1)">10</span><span style="color: rgba(0, 0, 0, 1)"> KillSignal</span>=<span style="color: rgba(0, 0, 0, 1)">SIGINT SyslogIdentifier</span>=dotnet-<span style="color: rgba(0, 0, 0, 1)">example User</span>=<span style="color: rgba(0, 0, 0, 1)">root Environment</span>=ASPNETCORE_ENVIRONMENT=<span style="color: rgba(0, 0, 0, 1)">Production Environment</span>=DOTNET_PRINT_TELEMETRY_MESSAGE=<span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">  [Install] WantedBy</span>=multi-user.target</pre> </div> <p>配置反向代理：</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">server {         listen</span><span style="color: rgba(128, 0, 128, 1)">80</span><span style="color: rgba(0, 0, 0, 1)">;         listen       [::]:</span><span style="color: rgba(128, 0, 128, 1)">80</span><span style="color: rgba(0, 0, 0, 1)">;         server_name  _;         root</span>/usr/share/nginx/<span style="color: rgba(0, 0, 0, 1)">html;   location</span>/<span style="color: rgba(0, 0, 0, 1)"> {         proxy_pass         http:</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">localhost:5000;</span>         proxy_http_version<span style="color: rgba(128, 0, 128, 1)">1.1</span><span style="color: rgba(0, 0, 0, 1)">;         proxy_set_header   Upgrade $http_upgrade;         proxy_set_header   Connection keep</span>-<span style="color: rgba(0, 0, 0, 1)">alive;         proxy_set_header   Host $host;         proxy_cache_bypass $http_upgrade;         proxy_set_header   X</span>-Forwarded-<span style="color: rgba(0, 0, 0, 1)">For $proxy_add_x_forwarded_for;         proxy_set_header   X</span>-Forwarded-<span style="color: rgba(0, 0, 0, 1)">Proto $scheme;     }         # Load configuration files</span><span style="color: rgba(0, 0, 255, 1)">for</span> the<span style="color: rgba(0, 0, 255, 1)">default</span><span style="color: rgba(0, 0, 0, 1)"> server block.         include</span>/etc/nginx/<span style="color: rgba(0, 0, 255, 1)">default</span>.d<span style="color: rgba(0, 128, 0, 1)">/*</span><span style="color: rgba(0, 128, 0, 1)">.conf;</span></pre> </div> <p>启动守护进程：</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">systemctl enable app systemctl start app systemctl status app</span></pre> </div> <p>查看服务状态，服务正常运行。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/e8666bcb0d8f1a8bca3d4137886323d0.jpg" alt="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI"></p> <p>&nbsp;然后，我们更改一下项目的源代码，返回一句祖传问候</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/be07968c2ad003b2046d74fb330e556b.jpg" alt="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI"></p> <p>&nbsp;然后在流水线中添加脚本命令：systemctl restart app</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/4d6377cd4f44c1a87262ad4d6df7807b.jpg" alt="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI"></p> <p>&nbsp;最后我们重新运行一下流水线，等待流水线运行完后，我们访问一下接口地址</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/2763981d04821cd2e9003329978467e1.jpg" alt="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI"></p> <p>成功输出祖传问候，第一个ASP.NET Core的流水线创建成功，完结撒花。</p> <p>文章虽短，但是写这篇文章用了三个小时才完成，踩了一堆的坑，大家在调试过程中需要多多注意。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-33474.htm">被猫抓了一下红色划痕会传染吗（被猫抓了红色划痕有事吗）</a></p>
                                        <p>下一个：<a href="/news/article-33951.htm">比熊犬专用狗粮推荐（比熊犬专用狗粮推荐一下）</a></p>
                                    </div>
                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2024-12-7-free-node-subscribe.htm">12月7日更新21.8M/S，2024年最新高速Clash/SSR/Shadowrocket/V2ray订阅链接免费节点订阅</a></h4>
                <p>这一次的节点更新覆盖了美国、香港、欧洲、日本、新加坡、加拿大、韩国等地区,最高速度可达21.8 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-64910.htm">取消动物防疫收费通知范文（取消动物防疫收费通知范文怎么写）</a></h4>
                <p>摘要：       本篇文章给大家谈谈取消动物防疫收费通知范文，以及取消动物防疫收费通知范文怎么写对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、幼儿园寒假作业收费通知怎么..</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-47683.htm">动物医院申请条件及流程表图片模板下载（动物医院办理条件）</a></h4>
                <p>摘要：       本篇文章给大家谈谈动物医院申请条件及流程表图片模板下载，以及动物医院办理条件对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、开宠物医院需要什么证件...  </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-55570.htm">重庆猫领养（重庆猫网领养）</a></h4>
                <p>摘要：       今天给各位分享重庆猫领养的知识，其中也会对重庆猫网领养进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、重庆江津区猫领养中心地址...    </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-20411.htm">去宠物店给猫咪驱虫一次多少钱（去宠物店给猫咪驱虫多少钱?）</a></h4>
                <p>摘要：       今天给各位分享去宠物店给猫咪驱虫一次多少钱的知识，其中也会对去宠物店给猫咪驱虫多少钱?进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、去宠.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-26407.htm">动物生物疫苗工资 动物生物疫苗工资高吗</a></h4>
                <p>摘要：       大家好，今天小编关注到一个比较有意思的话题，就是关于动物生物疫苗工资的问题，于是小编就整理了4个相关介绍动物生物疫苗工资的解答，让我们一起看看吧。牧原兽医待遇怎么样？万泰生物待遇怎</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2025-2-18-free-ssr-subscribe.htm">2月18日更新19.2M/S，2025年最新高速V2ray/Shadowrocket/Clash/SSR订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了韩国、香港、美国、日本、加拿大、欧洲、新加坡等地区,最高速度可达19.2 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-31093.htm">广州卖狗市场（广州卖狗狗批发市场）</a></h4>
                <p>摘要：       今天给各位分享广州卖狗市场的知识，其中也会对广州卖狗狗批发市场进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、广州宠物市场在哪里?想买只串.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/free-nodes/2024-12-23-free-shadowrocket-node.htm">12月23日更新21.1M/S，2024年最新高速Shadowrocket/SSR/V2ray/Clash订阅链接免费节点地址分享</a></h4>
                <p>这一次的节点更新覆盖了新加坡、加拿大、香港、美国、欧洲、日本、韩国等地区,最高速度可达21.1 M/S。只需复制下方的Clash/v2ray订阅链接,在客户端添加后即可正常使用。</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/news/article-46217.htm">vue axios请求分页器</a></h4>
                <p>&lt;template&gt;     &lt;div&gt;          &lt;el-pagination background layout="total, prev, pager, n</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">3</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
                                <h4><span class="badge" style="float: right;">80</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
                                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
                                <h4><span class="badge" style="float: right;">87</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <p class="m-0">Clash Node官网订阅站 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->
    <!-- all js scripts and files here -->
    <script src="/assets/website/js/frontend/clashnode/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/clashnode/jquery-3.5.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/website/js/frontend/clashnode/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/website/js/frontend/clashnode/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/website/js/frontend/clashnode/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/clashnode/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/website/js/frontend/clashnode/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>